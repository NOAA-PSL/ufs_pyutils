# Define the name of the Github actions/workflow.
name: Container Build Tests

# Define the Github triggers for which to launch the respective Github
# action/workflow.
on: [workflow_dispatch]

          
jobs:

  # Define the container image.
  build:
    runs-on: ubuntu-latest
    name: Run the ufs_pyutils container build tests.
        
    steps:

    # Build and install the Docker dependencies
    - name: Build and install the Docker dependencies
      run: |
           sudo apt-get install git
           sudo apt-get remove docker docker-engine docker.io containerd runc
           sudo apt-get update
           sudo apt-get install ca-certificates curl gnupg lsb-release
           sudo mkdir -p /etc/apt/keyrings
           sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
           sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
           sudo chmod a+r /etc/apt/keyrings/docker.gpg
           sudo apt-get update
           sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

    # Build and install the Singularity dependencies
    - name: Build and install the Singularity dependencies
      run: |
           sudo apt-get update
           sudo apt install bash
           sudo apt-get install build-essential
           sudo apt-get install libstdc++6
           sudo wget -O /tmp/go.tar.gz https://dl.google.com/go/go1.19.3.linux-386.tar.gz
           sudo tar -C /usr/local -xzf /tmp/go.tar.gz
           sudo echo "export PATH=$PATH:/usr/local/go/bin" >> /root/.bashrc
           sudo rm -rf /tmp/go.tar.gz"
           sudo git clone --recurse-submodules https://github.com/sylabs/singularity.git 
           sudo cd singularity 
           sudo source /root/.bashrc 
           sudo ./mconfig --without-suid --without-conmon --without-seccomp 
           bash -c "export LD_LIBRARY_PATH=/usr/lib64:${LD_LIBRARY_PATH}"
           sudo make -C builddir 
           sudo make -C builddir install
           
