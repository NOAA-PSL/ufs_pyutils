# =========================================================================

# Docker Recipe File: Docker/ubuntu18.04-miniconda_ufs_pyutils.ufs_tools.docker

# Email: henry.winterbottom@noaa.gov

# This program is free software: you can redistribute it and/or modify
# it under the terms of the respective public license published by the
# Free Software Foundation and included with the repository within
# which this application is contained.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# =========================================================================

# Description
# -----------

#    This Docker recipe file builds a Docker image containing the
#    Ubuntu 18.04 base-Linux platform required to build the Python 3.5+
#    software stack for the respective ufs_pyutils applications.

#    In addition to the Python 3.5+ software stack, the ufs_pyutils
#    package is also installed and the respective container
#    environment configured.

# Docker Instructions
# -------------------

#    The Docker container image should be built as follows.

#    user@host:$ docker build -f ubuntu18.04-miniconda.ufs_pyutils.docker --tag ubuntu18.04-miniconda.ufs_pyutils:<TAG> .

#    user@host:$ docker tag ubuntu18.04-miniconda.ufs_pyutils:<TAG> <DOCKER LOGIN>/ubuntu18.04-miniconda.ufs_pyutils:<TAG>

#    user@host:$ docker push <DOCKER LOGIN>/ubuntu18.04-miniconda.ufs_pyutils:<TAG>

#    where <TAG> is the tag identifier/name for the respective image
#    and <DOCKER LOGIN> is the user Docker Hub login name.

# Singularity Instructions
# ------------------------

#    To build the respective Singularity image file (i.e., container),
#    do as follows.

#    user@host:$ singularity build ubuntu18.04_miniconda_ufs_pyutils_<TAG>.sif docker://noaaufsrnr/ubuntu18.04-miniconda.ufs_pyutils:<TAG>

#    In order to execute and application within the Singularity
#    container, do as follows.

#    user@host:$ singularity exec ubuntu18.04_miniconda_ufs_pyutils_<TAG>.sif <X> <Y>

#    where <X> is an executable or application within the Singularity
#    container (e.g., Python) and <Y> is an application exist on the
#    local host disk (i.e., a Python script/application).

# Author(s)
# ---------

#    Henry R. Winterbottom; 11 January 2023 

# History
# -------

#    2023-01-11: Henry R. Winterbottom -- Initial implementation.

# Base Image Attributes
# ---------------------

#    Linux Image and Tag: ubuntu:18.04

# External Package Dependencies
# -----------------------------

#    ufs_pyutils; https://github.com/HenryWinterbottom-NOAA/ufs_pyutils

# Latest Container Image Downloads
# --------------------------------

#    Docker Hub: docker pull noaaufsrnr/el7-miniconda.ufs_pyutils:<TAG>

#    Sylabs: singularity pull library://noaaufsrnr/noaaufsrnr/ufs_pyutils:<TAG>

# ----

# Define the container base information.
FROM ubuntu:20.04
MAINTAINER "Henry R. Winterbottom (Henry.Winterbottom@noaa.gov)"

# ----

# Build the Linux platform.
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends wget && \
    rm -rf /var/lib/apt/lists/*

# ----

# Download and install Miniconda.
RUN wget --no-check-certificate https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh && \
    sh Miniconda3-py39_4.10.3-Linux-x86_64.sh -b -p /miniconda && \
    rm Miniconda3-py39_4.10.3-Linux-x86_64.sh

# Patch the Miniconda install for the respective application.
RUN /miniconda/bin/pip install netcdf4==1.6.2 && \
    /miniconda/bin/pip install numpy==1.22.4 && \
    /miniconda/bin/pip install astropy==5.2 && \
    /miniconda/bin/pip install bs4==0.0.1 && \
    /miniconda/bin/pip install croniter==1.3.8 && \
    /miniconda/bin/conda install -c anaconda pyyaml==6.0 && \
    /miniconda/bin/conda install -c anaconda boto3==1.24.28 && \
    /miniconda/bin/pip install schema==0.7.5 && \
    /miniconda/bin/conda clean --tarballs